<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="uk.co.cnoversea.api.dao.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="uk.co.cnoversea.api.dao.model.Task">
    <id column="tid" jdbcType="BIGINT" property="tid" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="traffic_type" jdbcType="VARCHAR" property="trafficType" />
    <result column="scale_limit" jdbcType="TINYINT" property="scaleLimit" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="start" jdbcType="VARCHAR" property="start" />
    <result column="start_code" jdbcType="VARCHAR" property="startCode" />
    <result column="target" jdbcType="VARCHAR" property="target" />
    <result column="target_code" jdbcType="VARCHAR" property="targetCode" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="uk.co.cnoversea.api.dao.model.TaskWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="through" jdbcType="LONGVARCHAR" property="through" />
    <result column="through_code" jdbcType="LONGVARCHAR" property="throughCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tid, uuid, type, traffic_type, scale_limit, title, start_time, start, start_code, 
    target, target_code, status, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    description, through, through_code
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="uk.co.cnoversea.api.dao.model.TaskExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cnos_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="uk.co.cnoversea.api.dao.model.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cnos_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cnos_task
    where tid = #{tid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cnos_task
    where tid = #{tid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="uk.co.cnoversea.api.dao.model.TaskExample">
    delete from cnos_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="uk.co.cnoversea.api.dao.model.TaskWithBLOBs" useGeneratedKeys="true" keyProperty="tid">
    insert into cnos_task (tid, uuid, type, 
      traffic_type, scale_limit, title, 
      start_time, start, start_code, 
      target, target_code, status, 
      create_time, modify_time, description, 
      through, through_code)
    values (#{tid,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{trafficType,jdbcType=VARCHAR}, #{scaleLimit,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{start,jdbcType=VARCHAR}, #{startCode,jdbcType=VARCHAR}, 
      #{target,jdbcType=VARCHAR}, #{targetCode,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}, 
      #{through,jdbcType=LONGVARCHAR}, #{throughCode,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="uk.co.cnoversea.api.dao.model.TaskWithBLOBs" useGeneratedKeys="true" keyProperty="tid">
    insert into cnos_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        tid,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="trafficType != null">
        traffic_type,
      </if>
      <if test="scaleLimit != null">
        scale_limit,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="startCode != null">
        start_code,
      </if>
      <if test="target != null">
        target,
      </if>
      <if test="targetCode != null">
        target_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="through != null">
        through,
      </if>
      <if test="throughCode != null">
        through_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="trafficType != null">
        #{trafficType,jdbcType=VARCHAR},
      </if>
      <if test="scaleLimit != null">
        #{scaleLimit,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="start != null">
        #{start,jdbcType=VARCHAR},
      </if>
      <if test="startCode != null">
        #{startCode,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="targetCode != null">
        #{targetCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="through != null">
        #{through,jdbcType=LONGVARCHAR},
      </if>
      <if test="throughCode != null">
        #{throughCode,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="uk.co.cnoversea.api.dao.model.TaskExample" resultType="java.lang.Long">
    select count(*) from cnos_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cnos_task
    <set>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficType != null">
        traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      </if>
      <if test="record.scaleLimit != null">
        scale_limit = #{record.scaleLimit,jdbcType=TINYINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.start != null">
        start = #{record.start,jdbcType=VARCHAR},
      </if>
      <if test="record.startCode != null">
        start_code = #{record.startCode,jdbcType=VARCHAR},
      </if>
      <if test="record.target != null">
        target = #{record.target,jdbcType=VARCHAR},
      </if>
      <if test="record.targetCode != null">
        target_code = #{record.targetCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.through != null">
        through = #{record.through,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.throughCode != null">
        through_code = #{record.throughCode,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cnos_task
    set tid = #{record.tid,jdbcType=BIGINT},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      scale_limit = #{record.scaleLimit,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      start = #{record.start,jdbcType=VARCHAR},
      start_code = #{record.startCode,jdbcType=VARCHAR},
      target = #{record.target,jdbcType=VARCHAR},
      target_code = #{record.targetCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR},
      through = #{record.through,jdbcType=LONGVARCHAR},
      through_code = #{record.throughCode,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cnos_task
    set tid = #{record.tid,jdbcType=BIGINT},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      scale_limit = #{record.scaleLimit,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      start = #{record.start,jdbcType=VARCHAR},
      start_code = #{record.startCode,jdbcType=VARCHAR},
      target = #{record.target,jdbcType=VARCHAR},
      target_code = #{record.targetCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="uk.co.cnoversea.api.dao.model.TaskWithBLOBs">
    update cnos_task
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="trafficType != null">
        traffic_type = #{trafficType,jdbcType=VARCHAR},
      </if>
      <if test="scaleLimit != null">
        scale_limit = #{scaleLimit,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=VARCHAR},
      </if>
      <if test="startCode != null">
        start_code = #{startCode,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="targetCode != null">
        target_code = #{targetCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="through != null">
        through = #{through,jdbcType=LONGVARCHAR},
      </if>
      <if test="throughCode != null">
        through_code = #{throughCode,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where tid = #{tid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="uk.co.cnoversea.api.dao.model.TaskWithBLOBs">
    update cnos_task
    set uuid = #{uuid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      traffic_type = #{trafficType,jdbcType=VARCHAR},
      scale_limit = #{scaleLimit,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      start = #{start,jdbcType=VARCHAR},
      start_code = #{startCode,jdbcType=VARCHAR},
      target = #{target,jdbcType=VARCHAR},
      target_code = #{targetCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR},
      through = #{through,jdbcType=LONGVARCHAR},
      through_code = #{throughCode,jdbcType=LONGVARCHAR}
    where tid = #{tid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="uk.co.cnoversea.api.dao.model.Task">
    update cnos_task
    set uuid = #{uuid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      traffic_type = #{trafficType,jdbcType=VARCHAR},
      scale_limit = #{scaleLimit,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      start = #{start,jdbcType=VARCHAR},
      start_code = #{startCode,jdbcType=VARCHAR},
      target = #{target,jdbcType=VARCHAR},
      target_code = #{targetCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where tid = #{tid,jdbcType=BIGINT}
  </update>

  <resultMap extends="ResultMapWithBLOBs" id="TaskExtResultMapWithBLOBs" type="uk.co.cnoversea.api.vo.TaskExt">
    <result column="start_longtitude" jdbcType="VARCHAR" property="startLongtitude" />
    <result column="start_latitude" jdbcType="VARCHAR" property="startLatitude" />
    <result column="target_longtitude" jdbcType="VARCHAR" property="targetLongtitude" />
    <result column="target_latitude" jdbcType="VARCHAR" property="targetLatitude" />
  </resultMap>
  <sql id="SelectiveAndPreEqListWithoutId">
    <if test="tid != null">and t.tid = #{tid,jdbcType=BIGINT}</if>
    <if test="uuid != null">and t.uuid = #{uuid,jdbcType=VARCHAR}</if>
    <if test="type != null">and t.type = #{type,jdbcType=VARCHAR}</if>
    <if test="startTime != null">and t.start_time = #{startTime,jdbcType=TIMESTAMP}</if>
    <if test="start != null">
      and (
        t.start = #{start,jdbcType=VARCHAR}
        or t.target = #{start,jdbcType=VARCHAR}
        or locate( #{start,jdbcType=VARCHAR}, t.target) &gt; 0
      )
    </if>
  </sql>
  <select id="selectPage" resultMap="TaskExtResultMapWithBLOBs">
    select
      t.*,
      m_start.longtitude start_longtitude, m_start.latitude start_latitude,
      m_target.longtitude target_longtitude, m_target.latitude target_latitude
    from cnos_task t
    left join cnos_postcode_lnglat_map m_start on t.start_code = m_start.postcode
    left join cnos_postcode_lnglat_map m_target on t.target_code = m_target.postcode
    where 1 = 1
    <include refid="SelectiveAndPreEqListWithoutId" />
    order by t.${order_} ${sort_}
    limit ${limitStart_}, ${limitSize_}
  </select>
  <select id="pageCount" resultType="int">
    select count(1)
    from cnos_task t
    where 1 = 1
    <include refid="SelectiveAndPreEqListWithoutId" />
  </select>

  <select id="selectByPartnerUUID" parameterType="uk.co.cnoversea.api.dao.model.Partner" resultMap="ResultMapWithBLOBs">
    select
    distinct
    t.*
    from cnos_task t left join cnos_partner p
    on t.tid = p.tid
    where p.uuid = #{uuid,jdbcType=VARCHAR}
    order by t.create_time desc
  </select>

</mapper>